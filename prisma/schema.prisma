// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model AccessToken {
  id              Int       @id @default(autoincrement())
  name            String
  value           String
  expirationDate  DateTime
  createdAt       DateTime
}

model Year {
  id            Int       @id @default(autoincrement())
  value         Int
  createdAt     DateTime
  months        Month[]
}

model Category {
  id            Int       @id @default(autoincrement())
  name          String
  createdAt     DateTime
  expenses      Expense[]
  userId        Int?
  user          User?     @relation(fields: [userId], references: [id])
}

model Gender {
  id            Int       @id @default(autoincrement())
  name          String
  users         User[]
}

model User {
  id            Int       @id @default(autoincrement())
  firstName     String?
  lastName      String?
  dateOfBirth   DateTime?
  email         String    @unique
  password      String
  createdAt     DateTime?
  genderId      Int?
  gender        Gender?   @relation(fields: [genderId], references: [id])
  months        Month[]
  categories    Category[]
}

model Month {
  id            Int       @id @default(autoincrement())
  value         Int
  description   String
  createdAt     DateTime
  yearId        Int
  userId        Int
  year          Year      @relation(fields: [yearId], references: [id])
  user          User      @relation(fields: [userId], references: [id])
  incomes       Income[]
  budgets       Budget[]
}

model Income {
  id            Int       @id @default(autoincrement())
  description   String?
  value         Float
  createdAt     DateTime
  monthId       Int
  month         Month     @relation(fields: [monthId], references: [id], onDelete: Cascade)
}

model Budget {
  id            Int       @id @default(autoincrement())
  description   String
  value         Float
  createdAt     DateTime
  monthId       Int
  month         Month     @relation(fields: [monthId], references: [id], onDelete: Cascade)
  expenses      Expense[]
}

model Expense {
  id            Int       @id @default(autoincrement())
  description   String
  value         Float
  createdAt     DateTime
  budgetId      Int
  categoryId    Int
  category      Category  @relation(fields: [categoryId], references: [id])
  budget        Budget    @relation(fields: [budgetId], references: [id], onDelete: Cascade)
}